library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
typeof(dis1)
dis1
dis1
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
test_that("bin_distribution", {
expect_s3_class(dis, "data.frame")
expect_s3_class(dis, "bindis")
expect_equal(plot(dis), img())
# expect_s3_class(plot(dis), "plot")
})
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
?is.plot
# dis1 <- bin_distribution(trials = 5, prob = 0.5)
# plot(dis1)
# typeof(dis1)
dis1
# dis1 <- bin_distribution(trials = 5, prob = 0.5)
# plot(dis1)
# typeof(dis1)
dis1$probability
?dbinom
dbinom(0:1, trials, prob)
trials <- 10
prob <- 0.3
dis <- bin_distribution(trials, prob)
dbinom(0:1, trials, prob)
dbinom(46:54, 100, 0.5)
dbinom(0:trials, trials, prob)
dis$probability
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
cum <- bin_cumulative(trials, prob)
cum$cumulative
library(testthat)
test_file("tests/testthat/test-bin_cumulative.R")
library(testthat)
test_file("tests/testthat/test-bin_cumulative.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_cumulative.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_cumulative.R")
library(testthat)
test_file("tests/testthat/test-bin_cumulative.R")
library(testthat)
test_file("tests/testthat/test-bin_cumulative.R")
library(testthat)
test_file("tests/testthat/test-bin_cumulative.R")
bin_probability(c(1,2), 3, 0.5)
bin_probability(success = 5, trials = 10, prob = 0.5)
bin_probability(success = 1, trials = 3, prob = 0.5)
bin_distribution(success = 1, trials = 3, prob = 0.5)
bin_distribution(trials = 3, prob = 0.5)
bin_cumulative(trials = 3, prob = 0.5)
bin_cumulative(trials = 3, prob = 0.5)
plot(bin_cumulative(trials = 3, prob = 0.5))
bin_distribution(trials = 3, prob = 0.5)
plot(bin_distribution(trials = 3, prob = 0.5))
# bin1 <- bin_variable(10, 0.3)
bin1
bin1 <- bin_variable(10, 0.3)
bin1
bin_variable(10, 0.3)
binsum1 <- summary(bin1)
binsum1
bin_variable(10, 0.3)
summary(bin_variable(10, 0.3))
bin_variable(10, 0.3)
summary(bin_variable(10, 0.3))
bin_variable(10, 0.3)
summary(bin_variable(10, 0.3))
bin_variable(10, 0.3)
summary(bin_variable(10, 0.3))
bin_variable(10, 0.3)
# bin_variable(10, 0.3)
summary(bin_variable(10, 0.3))
bin_variable(10, 0.3)
bin_variable(10, 0.3)
summary(bin_variable(10, 0.3))
bin_variable(10, 0.3)
summary(bin_variable(10, 0.3))
#' @export
print.binvar <- function(binvar){
cat('"Binomial variable"\n\n')
cat("Parameters\n")
cat("- number of trials: ", binvar$trials, "\n")
cat("- prob of success:  ", binvar$prob, "\n\n")
invisible(binvar)
}
bin_variable(10, 0.3)
summary(bin_variable(10, 0.3))
bin_variable(trials = 10, prob = 0.3)
summary(bin_variable(10, 0.3))
bin_variable(trials = 10, prob = 0.3)
summary(bin_variable(trials = 10, prob = 0.3))
bin_mean(trials = 10, prob = 0.3)
bin_kurtosis(trials = 10, prob = 0.3)
bin_skewness(trials = 10, prob = 0.3)
bin_mode(trials = 10, prob = 0.3)
bin_variance(trials = 10, prob = 0.3)
library(devtools)
?use_package()
devtools::use_package()
devtools::use_package("binomial")
devtools::use_package(binomial)
# =====================================================
# Devtools workflow
# library(devtools)
# =====================================================
devtools::document()          # generate documentation
# =====================================================
# Devtools workflow
# library(devtools)
# =====================================================
devtools::document()          # generate documentation
library(binomial)
devtools::document()
devtools::check_man()
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
devtools::check()
library(binomial)
library(testthat)
test_file("tests/testthat/test-bin_choose.R")
library(testthat)
test_file("tests/testthat/test-bin_probability.R")
library(testthat)
test_file("tests/testthat/test-bin_distribution.R")
library(testthat)
test_file("tests/testthat/test-bin_cumulative.R")
library(testthat)test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
?expect_lte
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_variance.R")
library(testthat)
test_file("tests/testthat/test-aux_mean.R")
library(testthat)
test_file("tests/testthat/test-aux_mode.R")
library(testthat)
test_file("tests/testthat/test-aux_mode.R")
library(testthat)
test_file("tests/testthat/test-aux_skewness.R")
library(testthat)
test_file("tests/testthat/test-aux_kurtosis")
library(testthat)
test_file("tests/testthat/test-aux_kurtosis.R")
library(binomial)
license()
test_check("binomial")
library(testthat)
library(binomial)
test_check("binomial")
install.packages("roxygen2")
library(roxygen2)
export(bin_choose)
??export
?export
?export
export(bin_choose)
devtools::document()          # generate documentation
devtools::document()          # generate documentation
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
warnings()
devtools::document()          # generate documentation
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
library(binomial)
devtools::build()             # build bundle
devtools::build()             # build bundle
devtools::build("binomial")             # build bundle
devtools::build(pkg = "binomial")             # build bundle
devtools::build(pkg = "binomial", path = "/R")             # build bundle
devtools::build()             # build bundle
devtools::build()             # build bundle
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
devtools::build()             # build bundle
devtools::install()           # install package
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
devtools::install()           # install package
devtools::check()
devtools::check()
devtools::build_vignettes()   # build vignettes
library(binomial)
devtools::build_vignettes()   # build vignettes
devtools::document()          # generate documentation
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
devtools::build()             # build bundle
devtools::build()             # build bundle
devtools::install()           # install package
devtools::check()
