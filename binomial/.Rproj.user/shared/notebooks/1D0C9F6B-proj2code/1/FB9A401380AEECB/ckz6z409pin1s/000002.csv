"0","# specify the number of bin we want on x and y, number of blocks are thus xs * ys"
"0","# 30 is a arbitrary decision"
"0","set.seed(154)"
"0","xs <- 20"
"0","ys <- 20"
"0","test_size <- 0.2"
"0","val_size <- 0.2"
"0","'%notin%' <- Negate('%in%') "
"0","total_data2 <- total_data[total_data$label != 0, ]"
"0","total_data2$xbins <- cut_interval(total_data2$x, xs, labels = seq(1:xs))"
"0","total_data2$ybins <- cut_interval(total_data2$y, ys, labels = seq(1:ys))"
"0","total_data2$blocks <- as.numeric(factor(paste0(total_data2$xbins, total_data2$ybins)))"
"0","# there may be some blocks without any labeled data"
"0","blocks <- length(unique(total_data2$blocks))"
"0","test_idx1 <- sample(seq(1:blocks), test_size * blocks)"
"0","test_set1 <- total_data2[total_data2$blocks %in% test_idx1, ]"
"0","train_set1 <- total_data2[total_data2$blocks %notin% test_idx1, ]"
"0","#further splitting trainset into training and validation set."
"0","train_len1 <- length(unique(train_set1$blocks))"
"0","val_idx1 <- sample(seq(1:train_len1), val_size * train_len1)"
"0","val_set1 <- train_set1[train_set1$blocks %in% val_idx1, ]"
"0","train_set1 <- train_set1[train_set1$blocks %notin% val_idx1, ]"
"0","hist(total_data2$blocks)"
